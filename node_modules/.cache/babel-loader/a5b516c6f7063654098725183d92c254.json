{"ast":null,"code":"/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n'use strict';\n\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  arguments: true,\n  arity: true\n};\nvar isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';\n\nmodule.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    var keys = Object.getOwnPropertyNames(sourceComponent);\n    /* istanbul ignore else */\n\n    if (isGetOwnPropertySymbolsAvailable) {\n      keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));\n    }\n\n    for (var i = 0; i < keys.length; ++i) {\n      if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {\n        try {\n          targetComponent[keys[i]] = sourceComponent[keys[i]];\n        } catch (error) {}\n      }\n    }\n  }\n\n  return targetComponent;\n};","map":{"version":3,"sources":["/Users/aoliu/Documents/Project/myportfolio/node_modules/styled-components/node_modules/hoist-non-react-statics/index.js"],"names":["REACT_STATICS","childContextTypes","contextTypes","defaultProps","displayName","getDefaultProps","mixins","propTypes","type","KNOWN_STATICS","name","length","prototype","caller","arguments","arity","isGetOwnPropertySymbolsAvailable","Object","getOwnPropertySymbols","module","exports","hoistNonReactStatics","targetComponent","sourceComponent","customStatics","keys","getOwnPropertyNames","concat","i","error"],"mappings":"AAAA;;;;AAIA;;AAEA,IAAIA,aAAa,GAAG;AAChBC,EAAAA,iBAAiB,EAAE,IADH;AAEhBC,EAAAA,YAAY,EAAE,IAFE;AAGhBC,EAAAA,YAAY,EAAE,IAHE;AAIhBC,EAAAA,WAAW,EAAE,IAJG;AAKhBC,EAAAA,eAAe,EAAE,IALD;AAMhBC,EAAAA,MAAM,EAAE,IANQ;AAOhBC,EAAAA,SAAS,EAAE,IAPK;AAQhBC,EAAAA,IAAI,EAAE;AARU,CAApB;AAWA,IAAIC,aAAa,GAAG;AAChBC,EAAAA,IAAI,EAAE,IADU;AAEhBC,EAAAA,MAAM,EAAE,IAFQ;AAGhBC,EAAAA,SAAS,EAAE,IAHK;AAIhBC,EAAAA,MAAM,EAAE,IAJQ;AAKhBC,EAAAA,SAAS,EAAE,IALK;AAMhBC,EAAAA,KAAK,EAAE;AANS,CAApB;AASA,IAAIC,gCAAgC,GAAG,OAAOC,MAAM,CAACC,qBAAd,KAAwC,UAA/E;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,oBAAT,CAA8BC,eAA9B,EAA+CC,eAA/C,EAAgEC,aAAhE,EAA+E;AAC5F,MAAI,OAAOD,eAAP,KAA2B,QAA/B,EAAyC;AAAE;AACvC,QAAIE,IAAI,GAAGR,MAAM,CAACS,mBAAP,CAA2BH,eAA3B,CAAX;AAEA;;AACA,QAAIP,gCAAJ,EAAsC;AAClCS,MAAAA,IAAI,GAAGA,IAAI,CAACE,MAAL,CAAYV,MAAM,CAACC,qBAAP,CAA6BK,eAA7B,CAAZ,CAAP;AACH;;AAED,SAAK,IAAIK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACd,MAAzB,EAAiC,EAAEiB,CAAnC,EAAsC;AAClC,UAAI,CAAC5B,aAAa,CAACyB,IAAI,CAACG,CAAD,CAAL,CAAd,IAA2B,CAACnB,aAAa,CAACgB,IAAI,CAACG,CAAD,CAAL,CAAzC,KAAuD,CAACJ,aAAD,IAAkB,CAACA,aAAa,CAACC,IAAI,CAACG,CAAD,CAAL,CAAvF,CAAJ,EAAuG;AACnG,YAAI;AACAN,UAAAA,eAAe,CAACG,IAAI,CAACG,CAAD,CAAL,CAAf,GAA2BL,eAAe,CAACE,IAAI,CAACG,CAAD,CAAL,CAA1C;AACH,SAFD,CAEE,OAAOC,KAAP,EAAc,CAEf;AACJ;AACJ;AACJ;;AAED,SAAOP,eAAP;AACH,CArBD","sourcesContent":["/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\n'use strict';\n\nvar REACT_STATICS = {\n    childContextTypes: true,\n    contextTypes: true,\n    defaultProps: true,\n    displayName: true,\n    getDefaultProps: true,\n    mixins: true,\n    propTypes: true,\n    type: true\n};\n\nvar KNOWN_STATICS = {\n    name: true,\n    length: true,\n    prototype: true,\n    caller: true,\n    arguments: true,\n    arity: true\n};\n\nvar isGetOwnPropertySymbolsAvailable = typeof Object.getOwnPropertySymbols === 'function';\n\nmodule.exports = function hoistNonReactStatics(targetComponent, sourceComponent, customStatics) {\n    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n        var keys = Object.getOwnPropertyNames(sourceComponent);\n\n        /* istanbul ignore else */\n        if (isGetOwnPropertySymbolsAvailable) {\n            keys = keys.concat(Object.getOwnPropertySymbols(sourceComponent));\n        }\n\n        for (var i = 0; i < keys.length; ++i) {\n            if (!REACT_STATICS[keys[i]] && !KNOWN_STATICS[keys[i]] && (!customStatics || !customStatics[keys[i]])) {\n                try {\n                    targetComponent[keys[i]] = sourceComponent[keys[i]];\n                } catch (error) {\n\n                }\n            }\n        }\n    }\n\n    return targetComponent;\n};\n"]},"metadata":{},"sourceType":"script"}