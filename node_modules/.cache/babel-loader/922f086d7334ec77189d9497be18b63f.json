{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport zIndex from '../styles/zIndex';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from './TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container;\n  return ReactDOM.findDOMNode(container);\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nvar defaultManager = new ModalManager();\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      zIndex: theme.zIndex.modal,\n      right: 0,\n      bottom: 0,\n      top: 0,\n      left: 0\n    },\n\n    /* Styles applied to the root element if the `Modal` has exited. */\n    hidden: {\n      visibility: 'hidden'\n    }\n  };\n};\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nvar Modal = React.forwardRef(function Modal(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiModal',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n\n  var _props$BackdropCompon = props.BackdropComponent,\n      BackdropComponent = _props$BackdropCompon === void 0 ? SimpleBackdrop : _props$BackdropCompon,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      _props$closeAfterTran = props.closeAfterTransition,\n      closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n      container = props.container,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      _props$disableScrollL = props.disableScrollLock,\n      disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n      _props$hideBackdrop = props.hideBackdrop,\n      hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n      _props$keepMounted = props.keepMounted,\n      keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n      _props$manager = props.manager,\n      manager = _props$manager === void 0 ? defaultManager : _props$manager,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onRendered = props.onRendered,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"onRendered\", \"open\"]);\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var modal = React.useRef({});\n  var mountNodeRef = React.useRef(null);\n  var modalRef = React.useRef(null);\n  var handleRef = useForkRef(modalRef, ref);\n  var hasTransition = getHasTransition(props);\n\n  var getDoc = function getDoc() {\n    return ownerDocument(mountNodeRef.current);\n  };\n\n  var getModal = function getModal() {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  var handleMounted = function handleMounted() {\n    manager.mount(getModal(), {\n      disableScrollLock: disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  var handleOpen = useEventCallback(function () {\n    var resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  var isTopModal = React.useCallback(function () {\n    return manager.isTopModal(getModal());\n  }, [manager]);\n  var handlePortalRef = useEventCallback(function (node) {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (onRendered) {\n      onRendered();\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  var handleClose = React.useCallback(function () {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(function () {\n    return function () {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(function () {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviours like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    } // Swallow the event, in case someone is listening for the escape key on the body.\n\n\n    event.stopPropagation();\n\n    if (onEscapeKeyDown) {\n      onEscapeKeyDown(event);\n    }\n\n    if (!disableEscapeKeyDown && onClose) {\n      onClose(event, 'escapeKeyDown');\n    }\n  };\n\n  var inlineStyle = styles(theme || {\n    zIndex: zIndex\n  });\n  var childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = children.props.tabIndex || '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  return React.createElement(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal\n  }, React.createElement(\"div\", _extends({\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    role: \"presentation\"\n  }, other, {\n    style: _extends({}, inlineStyle.root, {}, !open && exited ? inlineStyle.hidden : {}, {}, other.style)\n  }), hideBackdrop ? null : React.createElement(BackdropComponent, _extends({\n    open: open,\n    onClick: handleBackdropClick\n  }, BackdropProps)), React.createElement(TrapFocus, {\n    disableEnforceFocus: disableEnforceFocus,\n    disableAutoFocus: disableAutoFocus,\n    disableRestoreFocus: disableRestoreFocus,\n    getDoc: getDoc,\n    isEnabled: isTopModal,\n    open: open\n  }, React.cloneElement(children, childProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * A node, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   */\n  container: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, clicking the backdrop will not fire any callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire any callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  manager: PropTypes.object,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableEscapeKeyDown` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   * It signals that the `open={true}` prop took effect.\n   *\n   * This prop will be deprecated and removed in v5, the ref can be used instead.\n   */\n  onRendered: PropTypes.func,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default Modal;","map":{"version":3,"sources":["/Users/aoliu/Documents/Project/myportfolio/node_modules/@material-ui/core/esm/Modal/Modal.js"],"names":["_objectWithoutProperties","_extends","React","ReactDOM","PropTypes","getThemeProps","useTheme","elementAcceptingRef","ownerDocument","Portal","createChainedFunction","useForkRef","useEventCallback","zIndex","ModalManager","ariaHidden","TrapFocus","SimpleBackdrop","getContainer","container","findDOMNode","getHasTransition","props","children","hasOwnProperty","defaultManager","styles","theme","root","position","modal","right","bottom","top","left","hidden","visibility","Modal","forwardRef","inProps","ref","name","_props$BackdropCompon","BackdropComponent","BackdropProps","_props$closeAfterTran","closeAfterTransition","_props$disableAutoFoc","disableAutoFocus","_props$disableBackdro","disableBackdropClick","_props$disableEnforce","disableEnforceFocus","_props$disableEscapeK","disableEscapeKeyDown","_props$disablePortal","disablePortal","_props$disableRestore","disableRestoreFocus","_props$disableScrollL","disableScrollLock","_props$hideBackdrop","hideBackdrop","_props$keepMounted","keepMounted","_props$manager","manager","onBackdropClick","onClose","onEscapeKeyDown","onRendered","open","other","_React$useState","useState","exited","setExited","useRef","mountNodeRef","modalRef","handleRef","hasTransition","getDoc","current","getModal","mountNode","handleMounted","mount","scrollTop","handleOpen","resolvedContainer","body","add","isTopModal","useCallback","handlePortalRef","node","handleClose","remove","useEffect","handleEnter","handleExited","handleBackdropClick","event","target","currentTarget","handleKeyDown","key","stopPropagation","inlineStyle","childProps","tabIndex","undefined","onEnter","onExited","createElement","onKeyDown","role","style","onClick","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","elementType","object","isRequired","bool","oneOfType","func"],"mappings":"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","sourcesContent":["import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { getThemeProps, useTheme } from '@material-ui/styles';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport Portal from '../Portal';\nimport createChainedFunction from '../utils/createChainedFunction';\nimport useForkRef from '../utils/useForkRef';\nimport useEventCallback from '../utils/useEventCallback';\nimport zIndex from '../styles/zIndex';\nimport ModalManager, { ariaHidden } from './ModalManager';\nimport TrapFocus from './TrapFocus';\nimport SimpleBackdrop from './SimpleBackdrop';\n\nfunction getContainer(container) {\n  container = typeof container === 'function' ? container() : container;\n  return ReactDOM.findDOMNode(container);\n}\n\nfunction getHasTransition(props) {\n  return props.children ? props.children.props.hasOwnProperty('in') : false;\n} // A modal manager used to track and manage the state of open Modals.\n// Modals don't open on the server so this won't conflict with concurrent requests.\n\n\nvar defaultManager = new ModalManager();\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'fixed',\n      zIndex: theme.zIndex.modal,\n      right: 0,\n      bottom: 0,\n      top: 0,\n      left: 0\n    },\n\n    /* Styles applied to the root element if the `Modal` has exited. */\n    hidden: {\n      visibility: 'hidden'\n    }\n  };\n};\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/api/dialog/)\n * - [Drawer](/api/drawer/)\n * - [Menu](/api/menu/)\n * - [Popover](/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\n\nvar Modal = React.forwardRef(function Modal(inProps, ref) {\n  var theme = useTheme();\n  var props = getThemeProps({\n    name: 'MuiModal',\n    props: _extends({}, inProps),\n    theme: theme\n  });\n\n  var _props$BackdropCompon = props.BackdropComponent,\n      BackdropComponent = _props$BackdropCompon === void 0 ? SimpleBackdrop : _props$BackdropCompon,\n      BackdropProps = props.BackdropProps,\n      children = props.children,\n      _props$closeAfterTran = props.closeAfterTransition,\n      closeAfterTransition = _props$closeAfterTran === void 0 ? false : _props$closeAfterTran,\n      container = props.container,\n      _props$disableAutoFoc = props.disableAutoFocus,\n      disableAutoFocus = _props$disableAutoFoc === void 0 ? false : _props$disableAutoFoc,\n      _props$disableBackdro = props.disableBackdropClick,\n      disableBackdropClick = _props$disableBackdro === void 0 ? false : _props$disableBackdro,\n      _props$disableEnforce = props.disableEnforceFocus,\n      disableEnforceFocus = _props$disableEnforce === void 0 ? false : _props$disableEnforce,\n      _props$disableEscapeK = props.disableEscapeKeyDown,\n      disableEscapeKeyDown = _props$disableEscapeK === void 0 ? false : _props$disableEscapeK,\n      _props$disablePortal = props.disablePortal,\n      disablePortal = _props$disablePortal === void 0 ? false : _props$disablePortal,\n      _props$disableRestore = props.disableRestoreFocus,\n      disableRestoreFocus = _props$disableRestore === void 0 ? false : _props$disableRestore,\n      _props$disableScrollL = props.disableScrollLock,\n      disableScrollLock = _props$disableScrollL === void 0 ? false : _props$disableScrollL,\n      _props$hideBackdrop = props.hideBackdrop,\n      hideBackdrop = _props$hideBackdrop === void 0 ? false : _props$hideBackdrop,\n      _props$keepMounted = props.keepMounted,\n      keepMounted = _props$keepMounted === void 0 ? false : _props$keepMounted,\n      _props$manager = props.manager,\n      manager = _props$manager === void 0 ? defaultManager : _props$manager,\n      onBackdropClick = props.onBackdropClick,\n      onClose = props.onClose,\n      onEscapeKeyDown = props.onEscapeKeyDown,\n      onRendered = props.onRendered,\n      open = props.open,\n      other = _objectWithoutProperties(props, [\"BackdropComponent\", \"BackdropProps\", \"children\", \"closeAfterTransition\", \"container\", \"disableAutoFocus\", \"disableBackdropClick\", \"disableEnforceFocus\", \"disableEscapeKeyDown\", \"disablePortal\", \"disableRestoreFocus\", \"disableScrollLock\", \"hideBackdrop\", \"keepMounted\", \"manager\", \"onBackdropClick\", \"onClose\", \"onEscapeKeyDown\", \"onRendered\", \"open\"]);\n\n  var _React$useState = React.useState(true),\n      exited = _React$useState[0],\n      setExited = _React$useState[1];\n\n  var modal = React.useRef({});\n  var mountNodeRef = React.useRef(null);\n  var modalRef = React.useRef(null);\n  var handleRef = useForkRef(modalRef, ref);\n  var hasTransition = getHasTransition(props);\n\n  var getDoc = function getDoc() {\n    return ownerDocument(mountNodeRef.current);\n  };\n\n  var getModal = function getModal() {\n    modal.current.modalRef = modalRef.current;\n    modal.current.mountNode = mountNodeRef.current;\n    return modal.current;\n  };\n\n  var handleMounted = function handleMounted() {\n    manager.mount(getModal(), {\n      disableScrollLock: disableScrollLock\n    }); // Fix a bug on Chrome where the scroll isn't initially 0.\n\n    modalRef.current.scrollTop = 0;\n  };\n\n  var handleOpen = useEventCallback(function () {\n    var resolvedContainer = getContainer(container) || getDoc().body;\n    manager.add(getModal(), resolvedContainer); // The element was already mounted.\n\n    if (modalRef.current) {\n      handleMounted();\n    }\n  });\n  var isTopModal = React.useCallback(function () {\n    return manager.isTopModal(getModal());\n  }, [manager]);\n  var handlePortalRef = useEventCallback(function (node) {\n    mountNodeRef.current = node;\n\n    if (!node) {\n      return;\n    }\n\n    if (onRendered) {\n      onRendered();\n    }\n\n    if (open && isTopModal()) {\n      handleMounted();\n    } else {\n      ariaHidden(modalRef.current, true);\n    }\n  });\n  var handleClose = React.useCallback(function () {\n    manager.remove(getModal());\n  }, [manager]);\n  React.useEffect(function () {\n    return function () {\n      handleClose();\n    };\n  }, [handleClose]);\n  React.useEffect(function () {\n    if (open) {\n      handleOpen();\n    } else if (!hasTransition || !closeAfterTransition) {\n      handleClose();\n    }\n  }, [open, handleClose, hasTransition, closeAfterTransition, handleOpen]);\n\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n\n  var handleEnter = function handleEnter() {\n    setExited(false);\n  };\n\n  var handleExited = function handleExited() {\n    setExited(true);\n\n    if (closeAfterTransition) {\n      handleClose();\n    }\n  };\n\n  var handleBackdropClick = function handleBackdropClick(event) {\n    if (event.target !== event.currentTarget) {\n      return;\n    }\n\n    if (onBackdropClick) {\n      onBackdropClick(event);\n    }\n\n    if (!disableBackdropClick && onClose) {\n      onClose(event, 'backdropClick');\n    }\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    // The handler doesn't take event.defaultPrevented into account:\n    //\n    // event.preventDefault() is meant to stop default behaviours like\n    // clicking a checkbox to check it, hitting a button to submit a form,\n    // and hitting left arrow to move the cursor in a text input etc.\n    // Only special HTML elements have these default behaviors.\n    if (event.key !== 'Escape' || !isTopModal()) {\n      return;\n    } // Swallow the event, in case someone is listening for the escape key on the body.\n\n\n    event.stopPropagation();\n\n    if (onEscapeKeyDown) {\n      onEscapeKeyDown(event);\n    }\n\n    if (!disableEscapeKeyDown && onClose) {\n      onClose(event, 'escapeKeyDown');\n    }\n  };\n\n  var inlineStyle = styles(theme || {\n    zIndex: zIndex\n  });\n  var childProps = {};\n\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = children.props.tabIndex || '-1';\n  } // It's a Transition like component\n\n\n  if (hasTransition) {\n    childProps.onEnter = createChainedFunction(handleEnter, children.props.onEnter);\n    childProps.onExited = createChainedFunction(handleExited, children.props.onExited);\n  }\n\n  return React.createElement(Portal, {\n    ref: handlePortalRef,\n    container: container,\n    disablePortal: disablePortal\n  }, React.createElement(\"div\", _extends({\n    ref: handleRef,\n    onKeyDown: handleKeyDown,\n    role: \"presentation\"\n  }, other, {\n    style: _extends({}, inlineStyle.root, {}, !open && exited ? inlineStyle.hidden : {}, {}, other.style)\n  }), hideBackdrop ? null : React.createElement(BackdropComponent, _extends({\n    open: open,\n    onClick: handleBackdropClick\n  }, BackdropProps)), React.createElement(TrapFocus, {\n    disableEnforceFocus: disableEnforceFocus,\n    disableAutoFocus: disableAutoFocus,\n    disableRestoreFocus: disableRestoreFocus,\n    getDoc: getDoc,\n    isEnabled: isTopModal,\n    open: open\n  }, React.cloneElement(children, childProps))));\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes = {\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   */\n  BackdropComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Backdrop`](/api/backdrop/) element.\n   */\n  BackdropProps: PropTypes.object,\n\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   */\n  closeAfterTransition: PropTypes.bool,\n\n  /**\n   * A node, component instance, or function that returns either.\n   * The `container` will have the portal children appended to it.\n   */\n  container: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableAutoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, clicking the backdrop will not fire any callback.\n   */\n  disableBackdropClick: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  disableEnforceFocus: PropTypes.bool,\n\n  /**\n   * If `true`, hitting escape will not fire any callback.\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n\n  /**\n   * Disable the portal behavior.\n   * The children stay within it's parent DOM hierarchy.\n   */\n  disablePortal: PropTypes.bool,\n\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden.\n   */\n  disableRestoreFocus: PropTypes.bool,\n\n  /**\n   * Disable the scroll lock behavior.\n   */\n  disableScrollLock: PropTypes.bool,\n\n  /**\n   * If `true`, the backdrop is not rendered.\n   */\n  hideBackdrop: PropTypes.bool,\n\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   */\n  keepMounted: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  manager: PropTypes.object,\n\n  /**\n   * Callback fired when the backdrop is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the escape key is pressed,\n   * `disableEscapeKeyDown` is false and the modal is in focus.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * Callback fired once the children has been mounted into the `container`.\n   * It signals that the `open={true}` prop took effect.\n   *\n   * This prop will be deprecated and removed in v5, the ref can be used instead.\n   */\n  onRendered: PropTypes.func,\n\n  /**\n   * If `true`, the modal is open.\n   */\n  open: PropTypes.bool.isRequired\n} : void 0;\nexport default Modal;"]},"metadata":{},"sourceType":"module"}