{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);","map":{"version":3,"sources":["/Users/aoliu/Documents/Project/myportfolio/node_modules/@material-ui/core/esm/Card/Card.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","Paper","withStyles","styles","root","overflow","Card","forwardRef","props","ref","classes","className","_props$raised","raised","other","createElement","elevation","process","env","NODE_ENV","propTypes","children","node","object","isRequired","string","bool","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,IAAIC,MAAM,GAAG;AAClB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN;AAFY,CAAb;AAMP,IAAIC,IAAI,GAAGR,KAAK,CAACS,UAAN,CAAiB,SAASD,IAAT,CAAcE,KAAd,EAAqBC,GAArB,EAA0B;AACpD,MAAIC,OAAO,GAAGF,KAAK,CAACE,OAApB;AAAA,MACIC,SAAS,GAAGH,KAAK,CAACG,SADtB;AAAA,MAEIC,aAAa,GAAGJ,KAAK,CAACK,MAF1B;AAAA,MAGIA,MAAM,GAAGD,aAAa,KAAK,KAAK,CAAvB,GAA2B,KAA3B,GAAmCA,aAHhD;AAAA,MAIIE,KAAK,GAAGjB,wBAAwB,CAACW,KAAD,EAAQ,CAAC,SAAD,EAAY,WAAZ,EAAyB,QAAzB,CAAR,CAJpC;;AAMA,SAAOV,KAAK,CAACiB,aAAN,CAAoBd,KAApB,EAA2BL,QAAQ,CAAC;AACzCe,IAAAA,SAAS,EAAEX,IAAI,CAACU,OAAO,CAACN,IAAT,EAAeO,SAAf,CAD0B;AAEzCK,IAAAA,SAAS,EAAEH,MAAM,GAAG,CAAH,GAAO,CAFiB;AAGzCJ,IAAAA,GAAG,EAAEA;AAHoC,GAAD,EAIvCK,KAJuC,CAAnC,CAAP;AAKD,CAZU,CAAX;AAaAG,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCb,IAAI,CAACc,SAAL,GAAiB;AACvD;;;AAGAC,EAAAA,QAAQ,EAAEtB,SAAS,CAACuB,IAJmC;;AAMvD;;;;AAIAZ,EAAAA,OAAO,EAAEX,SAAS,CAACwB,MAAV,CAAiBC,UAV6B;;AAYvD;;;AAGAb,EAAAA,SAAS,EAAEZ,SAAS,CAAC0B,MAfkC;;AAiBvD;;;AAGAZ,EAAAA,MAAM,EAAEd,SAAS,CAAC2B;AApBqC,CAAzD,GAqBI,KAAK,CArBT;AAsBA,eAAexB,UAAU,CAACC,MAAD,EAAS;AAChCwB,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZrB,IAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    overflow: 'hidden'\n  }\n};\nvar Card = React.forwardRef(function Card(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$raised = props.raised,\n      raised = _props$raised === void 0 ? false : _props$raised,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"raised\"]);\n\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className),\n    elevation: raised ? 8 : 1,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Card.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the card will use raised styling.\n   */\n  raised: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCard'\n})(Card);"]},"metadata":{},"sourceType":"module"}