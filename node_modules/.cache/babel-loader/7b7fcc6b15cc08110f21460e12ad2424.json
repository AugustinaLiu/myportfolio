{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);","map":{"version":3,"sources":["/Users/aoliu/Documents/Project/myportfolio/node_modules/@material-ui/core/esm/FormGroup/FormGroup.js"],"names":["_extends","_objectWithoutProperties","React","PropTypes","clsx","withStyles","styles","root","display","flexDirection","flexWrap","row","FormGroup","forwardRef","props","ref","classes","className","_props$row","other","createElement","process","env","NODE_ENV","propTypes","children","node","object","isRequired","string","bool","name"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,wBAAP,MAAqC,oDAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAO,IAAIC,MAAM,GAAG;AAClB;AACAC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,aAAa,EAAE,QAFX;AAGJC,IAAAA,QAAQ,EAAE;AAHN,GAFY;;AAQlB;AACAC,EAAAA,GAAG,EAAE;AACHF,IAAAA,aAAa,EAAE;AADZ;AATa,CAAb;AAaP;;;;;;AAMA,IAAIG,SAAS,GAAGV,KAAK,CAACW,UAAN,CAAiB,SAASD,SAAT,CAAmBE,KAAnB,EAA0BC,GAA1B,EAA+B;AAC9D,MAAIC,OAAO,GAAGF,KAAK,CAACE,OAApB;AAAA,MACIC,SAAS,GAAGH,KAAK,CAACG,SADtB;AAAA,MAEIC,UAAU,GAAGJ,KAAK,CAACH,GAFvB;AAAA,MAGIA,GAAG,GAAGO,UAAU,KAAK,KAAK,CAApB,GAAwB,KAAxB,GAAgCA,UAH1C;AAAA,MAIIC,KAAK,GAAGlB,wBAAwB,CAACa,KAAD,EAAQ,CAAC,SAAD,EAAY,WAAZ,EAAyB,KAAzB,CAAR,CAJpC;;AAMA,SAAOZ,KAAK,CAACkB,aAAN,CAAoB,KAApB,EAA2BpB,QAAQ,CAAC;AACzCiB,IAAAA,SAAS,EAAEb,IAAI,CAACY,OAAO,CAACT,IAAT,EAAeU,SAAf,EAA0BN,GAAG,IAAIK,OAAO,CAACL,GAAzC,CAD0B;AAEzCI,IAAAA,GAAG,EAAEA;AAFoC,GAAD,EAGvCI,KAHuC,CAAnC,CAAP;AAID,CAXe,CAAhB;AAYAE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwCX,SAAS,CAACY,SAAV,GAAsB;AAC5D;;;AAGAC,EAAAA,QAAQ,EAAEtB,SAAS,CAACuB,IAJwC;;AAM5D;;;;AAIAV,EAAAA,OAAO,EAAEb,SAAS,CAACwB,MAAV,CAAiBC,UAVkC;;AAY5D;;;AAGAX,EAAAA,SAAS,EAAEd,SAAS,CAAC0B,MAfuC;;AAiB5D;;;AAGAlB,EAAAA,GAAG,EAAER,SAAS,CAAC2B;AApB6C,CAA9D,GAqBI,KAAK,CArBT;AAsBA,eAAezB,UAAU,CAACC,MAAD,EAAS;AAChCyB,EAAAA,IAAI,EAAE;AAD0B,CAAT,CAAV,CAEZnB,SAFY,CAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    flexWrap: 'wrap'\n  },\n\n  /* Styles applied to the root element if `row={true}`. */\n  row: {\n    flexDirection: 'row'\n  }\n};\n/**\n * `FormGroup` wraps controls such as `Checkbox` and `Switch`.\n * It provides compact row layout.\n * For the `Radio`, you should be using the `RadioGroup` component instead of this one.\n */\n\nvar FormGroup = React.forwardRef(function FormGroup(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$row = props.row,\n      row = _props$row === void 0 ? false : _props$row,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"row\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, row && classes.row),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormGroup.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Display group of elements in a compact row.\n   */\n  row: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormGroup'\n})(FormGroup);"]},"metadata":{},"sourceType":"module"}